'.source.fortran':
  'editor':
    'increaseIndentPattern': '(?ix)^\\s*(
        (contains|program)\\b
        |do\\b
        |if\\b.*\\bthen\\b
        |else(\\s*if)?\\b
        |(?!end)(\\w+\\s+)*\\b(function|subroutine)\\b
      )'
    'decreaseIndentPattern': '(?ix)^\\s*(
        contains\\b
        |end(do|function|if|program|subroutine)?\\b
        |else(if)?\\b
      )'
'.source.fortran.modern':
  'editor':
    'commentStart': '! '
    'commentEnd': ''
    'increaseIndentPattern': '(?ix)^\\s*(
        module\\b(?!\\s+procedure\\b)
        |(contains|program|submodule)\\b
        |(?!end)(\\w+\\s+)*\\b(function|subroutine)\\b
        |type(?!\\s*\\()
        |(abstract\\s+)?interface\\b
        |where\\b(?!\\s*\\(.*\\)\\s*[a-z])
        |elsewhere\\b
        |(do|forall)\\b
        |if\\b.*\\bthen\\b
        |else(if)?\\b
        |select\\s*(case|type)\\b
        |(case)\\b
        |(class|type)\\s+is\\b
      )'
    'decreaseIndentPattern': '(?ix)^\\s*(
        contains\\b
        |end(
          module|program|submodule
          |function|subroutine
          |interface|type
          |do|forall
          |if|select|where
        )?\\b
        |else(if|where)?\\b
        |(class|type)\\s+is\\b
        |case\\b
      )'

'.source.fortran .meta.function.interface':
  'editor':
    'completions': [
      'module procedure'
      'operator'
      'assignment(=)'
    ]
'.source.fortran .meta.specification':
  'editor':
    'completions': [
      'parameter'
      'dimension()'
      'allocatable'
      'intent()'
    ]
